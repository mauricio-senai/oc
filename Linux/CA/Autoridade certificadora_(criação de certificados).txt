******************** Autoridade Certificadora ( Criação de CA) ********************

Para as configurações necessarias primeiramente devemos instalar o pacote "OPENSSL".
#apt-get install openssl

Apos a instalação do pacote faremos as configurações necessarias no arquivo "openssl.cnf".
#nano /etc/ssl/openssl.cnf     ---> Configurar o arquivo da seguinte maneira.

            #####################################################
Linha 129 - # countryName_default	    = BR                # - Modificar de acordo com o Pais.
Linha 134 - # stateOrProvinceName_defaul    = RS                # - Modificar de acordo com  o estado.
Linha 137 - # localityName_default	    = Porto Alegre      # - Acrescentar esta linha ao arquivo e modificar de acordo com a cidade.
Linha 140 - # 0.organizationName_default    = NomeDaOrganizacao # - Modificar de acordo com a organização.
            #####################################################

Logo apos as configurações feitas e so reiniciar o serviço.
#service openssl restart

#systemctl status openssl.service

#################################################################
************************Criar o CA*******************************
#################################################################
Criar um diretório para armazenar os Certificados
#mkdir /certs
Entrar no Diretorio
#cd /certs
Depois de reiniciar o serviço e criar o diretório e so criar o certificado
#/usr/lib/ssl/misc/CA.pl -newca  --> Cria o CA do servidor que ira assinar os outros certificados quando criados.
----Não digitar nada quando aparecer "CA certificate filename (or enter to create)"
O arquivo do CA fica em ./demoCA/cacert.pem

OBS.: apos a criação do "newca", para os proximos certificados nao sera necessario criar o "newca" de volta pois sobrescrevera a primeira assinatura.

###################################################################
***********Criar o certificado para os serviços********************
###################################################################

#/usr/lib/ssl/misc/CA.pl -newreq --> Cria um arquivo de solicitação de certificados (Se utilizar "CA.pl -newreq-nodes" não precisa de senha) 
Serao criados os arquivos ./newreq.pem(Chave de solicitação de certificado) e newkey.pem(chave privada)
#/usr/lib/ssl/misc/CA.pl -sign   --> Comando utilizado para assinar os certificados.
Sera criado o arquivo ./newcert.pem(chave publica)

* OBS.::
* -> É importante que o campo "Common Name" seja preenchido com o endereço correto do servidor (nome e domínio).
* -> Não é necessário preencher os três últimos campos, por isso colocamos um ponto ('.') em cada um deles.   
*    Você pode preenchê-los se achar conveniente.
* -> Teremos como resultado da execução do script CA dois arquivos:
* -> Newcert.pem, que contém o certificado auto-assinado do servidor; 
* -> E newkey.pem, que contém a chave privada do certificado protegida por uma senha.Esses dois arquivos estão listados abaixo:
* -> Se o certificado auto-assinado que foi criado for usado para proteger um serviço de rede, talvez seja necessário remover a senha de acesso à chave privada.
*    Se a chave privada for mantida com a senha, toda vez que o serviço que a utilizar for inicializado, a senha terá que ser digitada pelo administrador. 
*    Para remover a senha de acesso à chave privada execute o seguinte comando:
*
#####################################################################
*****************Remover a senha do certificado**********************
#####################################################################
#openssl rsa -in newkey.pem -out openkey.pem  
*  Enter pass phrase for newkey.pem:secret
*  writing RSA key
*
* -> Esse comando vai abrir o arquivo da chave privada, para isso ele pedirá a mesma senha que você digitou no início da geração do certificado. 
* Ele criará então um novo arquivo, contendo a mesma chave privada, porém sem senha de acesso, que será guardado no openkey.pem ou outro arquivo especificado na linha de comando. 

#####################################################################
*************** Transferencia de arquivos entre LINUX ***************
#####################################################################
Transferir arquivos de um linux pro outro.
Instalar o ssh nas máquinas que irao receber os arquivos
#apt-get install ssh

Na maquina que enviara os certificados aos clientes executar o comando de transferencia
#scp /caminho/real/do/arquivo root@IP:/caminho/local
Ex.: scp ./newkey.pem root@192.168.0.1:/cliente/certs/
OBS.: Tem que transferir os arquivos: cacert.pem, newkey.pem e newcert.pem
**********************************************************************************************************
* OBS.: 										                 *
* -> scp                      -- sigla padrão.							         *
* -> /caminho/real/do/arquivo -- e aonde ele se encontra nesse momento.                                  *
* -> root@ip:                 -- e root mais o ip do servidor que sera mandado os arquivos.              *
* -> /caminho/local           -- e o diretorio no outro servidor que ira armazenar esses arquivos.       *
**********************************************************************************************************

#####################################################################
******************Configurar o CA nos clientes***********************
#####################################################################
Não esquecer de abrir o cacert.pem no navegador de todas as máquinas da topologia para que elas confiem no CA.
OBS.:Colocar o arquivo cacert.pem no apache para facilitar a distribuição (http://IP_DO_SERVER/cacert.pem)
O cacert.pem pode ser alterado para nome.crt que é a extenção de certificado do IE

#####################################################################
**************************Exemplo no apache**************************
#####################################################################
<VirtualHost *:443>
ServerName www.dominio.com.br
SSLEngine On
DocumentRoot /var/www/www.dominio.com.br
SSLCertificateFile etc/apache2/ssl/newcert.pem
SSLCertificateKeyFile etc/apache2/ssl/newkey.pem
</VirtualHost>


#################### Fonte ##################
https://workaround.org/certificate-authority/

https://www.openssl.org/docs/manmaster/apps/pkey.html
https://www.openssl.org/docs/manmaster/apps/rsa.html
http://www.thegeekstuff.com/2013/09/openvpn-setup/